import Web3 from "web3";

export type Web3ContextType = {
	web3: Web3 | null;
	balance: number | null;
	struBalance: number | null;
	balanceStruOnWallet: bigint | null;
	stakedBalance: number | null;
	rewardRate: number | null;
	contractStaking: any | null;
	contractStarRunnerToken: any | null;
	apy: number | null;
	days: number | null;
	earned: number | null;
	allowance: bigint | null;
	numberOfStakeSrtu: string;
	numberOfWithdrawSrtu: string;
	getBalance: () => void;
	getStruBalance: () => void;
	getStakedBalance: () => void;
	updAll: () => void;
	getRewardRate: (input: number) => void;
	getAllowance: () => void;
	transactionStakeNumberOfStru: string;
	transactionWithdrawNumberOfStru: string;
	transactionRewardsNumberOfStru: string;
	isErrorApprove: boolean;
	isErrorStaked: boolean;
	isSuccessApprove: boolean;
	isSuccessStake: boolean;
	onSubmitStakeHandler: React.FormEventHandler<HTMLFormElement>;
	onSubmitWidthdrawHandler: React.FormEventHandler<HTMLFormElement>;
	onSubmitRewardsHandler: React.FormEventHandler<HTMLFormElement>;
	onChangeInput: React.ChangeEventHandler<HTMLInputElement>;
	isLoadingApprove: boolean;
	isLoadingStake: boolean;
	isLoadingWithdraw: boolean;
	isLoadingWithdrawAll: boolean;
	isErrorApprovePrepare: Error | null;
	isSuccessWithdrawAll: boolean;
	isSuccessWithdraw: boolean;
	isErrorWithdrawAll: boolean;
	isErrorWithdraw: boolean;
	isSuccessWithdrawRewards: boolean;
	isErrorWithdrawRewards: boolean;
	isLoadingWithdrawRewards: boolean;
	isFetchInfoError: boolean;
};
